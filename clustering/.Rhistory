head(daimonds)
head(diamonds)
data(diamon)
data(diamond)
data(diamonds)
library(ggplot2)
head(diamonds)
nrow(diamonds)
table(diamonds$cut)
data(faithful)
ggplot() +
geom_point(aes(x = waiting, y = eruptions))
ggplot() +
geom_point(aes(x = waiting, y = eruption),
data = faithful)
ggplot() +
geom_point(aes(x = waiting, y = eruptions),
data = faithful)
?dist
hclust
?hclust
nrow(faithful)
nrow(iris)
data(iris)
head(iris)
ggplot() +
geom_point(aes(x = Sepal.Length, y = Sepal.Width),
data = iris) +
theme_bw()
ggplot() +
geom_point(aes(x = Petal.Length, y = Petal.Width),
data = iris) +
theme_bw()
head(iris)
scaled.petals <- iris %>%
select(startsWith('Petal')) %>%
scale()
library(dplyr)
scaled.petals <- iris %>%
select(startsWith('Petal')) %>%
scale()
?starts_with
scaled.petals <- iris %>%
select(starts_with('Petal')) %>%
scale()
scaled.petals
petal.distances <- dist(scaled.petals)
which.min(petal.distances)
petal.distances
dim(petal.distances)
str(petal.distances)
head(petal.distances)
sum(duplicated(iris %>% select(starts_with())))
sum(duplicated(iris %>% select(starts_with('Petal'))))
petal.distances <- dist(scaled.petals) %>%
as.matrix()
dim(petal.distances)
head(petal.distances)
which.min(petal.distances)
petal.distances == 0
?which
which(petal.distances == 0)
arrayInd(petal.distances == 0)
arrayInd(petal.distances == 0, .dim = dim(petal.distances))
arrayInd(which(petal.distances == 0), .dim = dim(petal.distances))
head(petal.distances)
?hclust
head(mtcars)
head(iris)
knitr::opts_chunk$set(echo = TRUE)
data(iris)
iris$is.setosa <- iris$Species == 'setosa'
ggplot() +
geom_point(aes(x = Petal.Width, y = Petal.Length, col = is.setosa),
data = iris) +
theme_bw()
relu <- function(x){
ifelse(x >= 0, x, 0)
}
relu(-10:10)
logistic <- function(x){
1 / (1 + exp(-x))
}
logistic(-4:4)
log(0.1)
log(.9)
1e-15
log(0.1)
log(0.9)
log(1 - 0.9)
evaluation <- function(prediction, actual, eps = 1e-15){
predicted = pmin(pmax(predicted, eps), 1 - eps)
-mean(actual * log(predicted) + (1 - actual) * log(1 - predicted))
}
evaluation(seq(0.1, 0.9), 1)
evaluation <- function(prediction, actual, eps = 1e-15){
prediction = pmin(pmax(prediction, eps), 1 - eps)
-mean(actual * log(prediction) + (1 - actual) * log(1 - prediction))
}
evaluation(seq(0.1, 0.9), 1)
evaluation(seq(0.1, 0.9), 0)
evaluation(seq(0.1, 0.9, 0.1), 0)
evaluation(seq(0.1, 0.9, 0.1), 1)
